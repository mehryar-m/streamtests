plugins {
    id 'java'
    id "com.github.imflog.kafka-schema-registry-gradle-plugin" version "0.9.0"
    id "com.commercehub.gradle.plugin.avro" version "0.17.0"
}

apply plugin: "com.github.imflog.kafka-schema-registry-gradle-plugin"
apply plugin: "com.commercehub.gradle.plugin.avro"
group 'com'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://packages.confluent.io/maven/"
    }
}

dependencies {
    // kafka
    compile group: 'org.apache.kafka', name: 'kafka-streams', version: '2.5.0'
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.5.0'
    compile group: 'org.apache.kafka', name: 'kafka_2.12', version: '2.2.0'

    // jaeger
    implementation 'io.jaegertracing:jaeger-client:1.3.0'
    implementation 'io.opentracing.contrib:opentracing-kafka-client:0.1.13'
    implementation 'io.opentracing.contrib:opentracing-kafka-streams:0.1.13'
    //  schemas
    compile group: 'org.apache.avro', name: 'avro', version: '1.9.2'
    compile group: 'io.confluent', name: 'kafka-avro-serializer', version: '5.5.0'
    compile group: 'io.confluent', name: 'kafka-streams-avro-serde', version: '5.5.0'

    // utilities
    compile group: 'com.google.code.gson', name: 'gson', version: '2.6.1'
    compile group: 'com.google.guava', name: 'guava', version: '21.0'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.29'

    // test dependencies
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.0'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.apache.kafka', name: 'kafka-streams', version: '1.0.0', classifier: 'test'
    testCompile group: 'org.apache.kafka', name: 'kafka-clients', version: '1.0.0', classifier: 'test'


}

// https://github.com/ImFlog/schema-registry-plugin for examples

registerSchemasTask {
    schemaRegistry {
        url = 'http://localhost:8081'
        register {
            subject('Account-value', 'src/main/resources/schemas/AccountMaintainer/Account.avsc')
            subject('Balance-value', 'src/main/resources/schemas/AccountMaintainer/Balance.avsc')
            subject('Customer-value', 'src/main/resources/schemas/AccountMaintainer/Customer.avsc')
            subject('CustomerRelationship-value', 'src/main/resources/schemas/AccountMaintainer/CustomerRelationship.avsc')
            subject('Entity-value', 'src/main/resources/schemas/EventStatus/Entity.avsc')
            subject('EntityStatus-value', 'src/main/resources/schemas/EventStatus/EntityStatusChange.avsc')
        }
    }
}

downloadSchemasTask {
    schemaRegistry {
        url = 'http://localhost:8081'
        download {
            subject('Account-value', 'src/main/avro')
            subject('Balance-value', 'src/main/avro')
            subject('Customer-value', 'src/main/avro')
            subject('CustomerRelationship-value', 'src/main/avro')
            subject('Entity-value', 'src/main/avro')
            subject('Entity-value', 'src/main/avro')
        }
    }
}


